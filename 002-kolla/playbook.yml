---
- hosts: all

  vars:
    systemd_docker_config_directory: /etc/systemd/system/docker.service.d
  tasks:
    - name: Install list of packages
      package:
        name: "{{ item }}"
        state: latest
      with_items:
        - python-pip
        - python-dev
        - libffi-dev
        - gcc
        - libssl-dev
        - traceroute
        - curl                  # for docker
        - apt-transport-https
        - ca-certificates
        - software-properties-common
        - ntp
    - name: Install Pip Packages
      pip:
        name: "{{ item }}"
        state: latest
      with_items:
        - pip
        - ansible
        - docker-py
        - python-openstackclient
    - name: Ensure repository key is installed
      apt_key:
        id: "0EBFCD88"
        url: "https://download.docker.com/linux/ubuntu/gpg"
        state: present
    - name: Ensure docker registry is available
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
        state: present
    - name: Ensure docker and dependencies are installed
      package:
        name: "docker-ce"
        state: latest
    - name: Ensure docker.service directory is existed
      file:
        path: "{{ systemd_docker_config_directory }}"
        state: directory
    - name: Ensure kolla.conf had contents
      template:
        src: kolla.conf.j2
        dest: "{{ systemd_docker_config_directory }}/kolla.conf"
        force: no
    - name: Ensure docker.json had contents
      template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json
        force: no
    - name: Restart docker systemd to take effect
      systemd:
        state: restarted
        daemon_reload: yes
        name: docker
    - name: Make sure ntp is running
      systemd:
        state: started
        name: ntp
    - name: Install Pip Packages
      pip:
        name: kolla-ansible
        version: 4.0.0
    - name: Copy the file from kolla ansible
      stat:
        path: /etc/kolla/
      register: kd
    - name: Crete /etc/kolla/ from kolla-ansible
      shell: cp -r /usr/local/share/kolla-ansible/etc_examples/kolla /etc/kolla/
      when: kd.stat.exists == False
    - name: replace network_interface
      lineinfile:
        path: /etc/kolla/globals.yml
        regexp: '^network_interface'
        line: 'network_interface: "enp0s3"'
    - name: replace neutron_external_interface
      lineinfile:
        path: /etc/kolla/globals.yml
        regexp: '^neutron_external_interface'
        line: 'neutron_external_interface: "enp0s8"'
    - name: Debug info
      debug:
        msg: "{{ ansible_interfaces }}"
